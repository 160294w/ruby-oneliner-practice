Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
  - destroy
  -/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_instance.web_server will be updated in-place
  ~ resource "aws_instance" "web_server" {
        id                           = "i-1234567890abcdef0"
      ~ instance_type                = "t3.small" -> "t3.medium"
        tags                         = {
            "Environment" = "production"
            "Name"        = "WebServer"
            "Owner"       = "DevOps Team"
        }
        # (15 unchanged attributes hidden)
    }

  # aws_instance.app_server[1] will be created
  + resource "aws_instance" "app_server" {
      + ami                          = "ami-0c55b159cbfafe1f0"
      + instance_type                = "t3.large"
      + id                           = (known after apply)
      + availability_zone            = (known after apply)
      + private_ip                   = (known after apply)
      + public_ip                    = (known after apply)
      + tags                         = {
          + "Environment" = "production"
          + "Name"        = "AppServer-2"
          + "Owner"       = "DevOps Team"
        }
      + vpc_security_group_ids       = [
          + "sg-0123456789abcdef1",
        ]
    }

  # aws_security_group.db_sg will be created
  + resource "aws_security_group" "db_sg" {
      + id                     = (known after apply)
      + name                   = "database-sg"
      + description            = "Security group for database"
      + vpc_id                 = "vpc-0123456789abcdef0"

      + ingress {
          + from_port      = 3306
          + to_port        = 3306
          + protocol       = "tcp"
          + cidr_blocks    = [
              + "10.0.0.0/16",
            ]
          + description    = "MySQL from VPC"
        }

      + egress {
          + from_port      = 0
          + to_port        = 0
          + protocol       = "-1"
          + cidr_blocks    = [
              + "0.0.0.0/0",
            ]
        }

      + tags = {
          + "Environment" = "production"
          + "Name"        = "DatabaseSG"
        }
    }

  # aws_instance.old_server will be destroyed
  - resource "aws_instance" "old_server" {
      - id                           = "i-9876543210fedcba0"
      - ami                          = "ami-0c55b159cbfafe1f0"
      - instance_type                = "t2.micro"
      - availability_zone            = "us-east-1c"
      - private_ip                   = "10.0.3.30"
      - tags                         = {
          - "Environment" = "staging"
          - "Name"        = "OldServer"
        }
    }

  # aws_db_instance.postgres must be replaced
  -/+ resource "aws_db_instance" "postgres" {
      ~ allocated_storage            = 20 -> 100 # forces replacement
      ~ engine_version               = "14.6" -> "15.4" # forces replacement
        id                           = "postgres-instance-1"
        identifier                   = "postgres-instance-1"
      ~ instance_class               = "db.t3.micro" -> "db.t3.medium"
        # (10 unchanged attributes hidden)
    }

  # aws_s3_bucket.backup will be created
  + resource "aws_s3_bucket" "backup" {
      + bucket                    = "my-app-backup-bucket"
      + region                    = "us-east-1"
      + acl                       = "private"
      + id                        = (known after apply)

      + versioning {
          + enabled = true
        }

      + tags = {
          + "Environment" = "production"
          + "Name"        = "BackupBucket"
          + "Owner"       = "DevOps Team"
        }
    }

  # aws_eip.nat will be destroyed
  - resource "aws_eip" "nat" {
      - id        = "eipalloc-0123456789abcdef0"
      - public_ip = "54.234.56.78"
      - instance  = null
      - tags      = {
          - "Name" = "NAT-EIP"
        }
    }

Plan: 3 to add, 2 to change, 2 to destroy, 1 to replace.

Changes to Outputs:
  + web_server_public_ip = "54.123.45.67"
  ~ app_server_count     = 1 -> 2

────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
